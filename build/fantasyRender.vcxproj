<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{0931497D-2599-30D6-A6B9-A76E5320A472}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>fantasyRender</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\vs2017_project\fantasyRender\1\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">fantasyRender.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">fantasyRender</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/vs2017_project/fantasyRender/1/build/Release/fantasyRender.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/vs2017_project/fantasyRender/1/build/Release/fantasyRender.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\vs2017_project\fantasyRender\1\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/vs2017_project/fantasyRender/1/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\cmake-3.21.3-windows-x86_64\bin\cmake.exe -SD:/vs2017_project/fantasyRender/1 -BD:/vs2017_project/fantasyRender/1/build --check-stamp-file D:/vs2017_project/fantasyRender/1/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeCInformation.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeCXXInformation.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeGenericSystem.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeRCInformation.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\Compiler\MSVC-CXX.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\Platform\Windows-MSVC-CXX.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\Platform\Windows.cmake;D:\cmake-3.21.3-windows-x86_64\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake;D:\vs2017_project\fantasyRender\1\build\CMakeFiles\3.21.3\CMakeCCompiler.cmake;D:\vs2017_project\fantasyRender\1\build\CMakeFiles\3.21.3\CMakeCXXCompiler.cmake;D:\vs2017_project\fantasyRender\1\build\CMakeFiles\3.21.3\CMakeRCCompiler.cmake;D:\vs2017_project\fantasyRender\1\build\CMakeFiles\3.21.3\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\vs2017_project\fantasyRender\1\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\type.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\camera.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\light.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\mesh.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\OBJ_Loader.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\scene.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\shader.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\texture.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\tgaimage.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\rasterization.h" />
    <ClInclude Include="D:\vs2017_project\fantasyRender\1\platform\windows\window.h" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\camera.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\main.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\mesh.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\rasterization.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\scene.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\shader.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\texture.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\tgaimage.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\type.cpp" />
    <ClCompile Include="D:\vs2017_project\fantasyRender\1\platform\windows\window_windows.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\vs2017_project\fantasyRender\1\build\ZERO_CHECK.vcxproj">
      <Project>{7EC0CDA3-5FBA-31FA-A8AC-40E0C6BA94AD}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>